조건문이란?
if를 통해 조건을 달성해야만 특정 코드를 구동시키는 일종의 트리거이다.
if는 인간의 말로 만약에라는 말로 해석이 가능하며, elif는 또는, 혹은과 같이 해석할 수 있다
if a>10: - 해석(만약 a가 10보다 크다면)
 print("a는 10보다 큽니다!")- a는 10보다 큽니다!를 출력한다.
위 구문에서, 만약 a가 10보다 크지 않았다면, 밑의 if문에 소속된 하위구문인 print문은 출력이 되지않는다. Why? *조건을 만족하지 않았기 때문에.*
위를 보듯, if는 조건을 만족해야 실행된다. 그러나 if문의 조건을 만족하지 않았을 경우에 어떤 식으로 출력할 지 설정할 수 있다.
바로 else문과 elif문인데, 이 두 조건문은 역할도 다르고 뜻이 다르다.
만약 if문이 조건을 만족하지 않았을 경우, 밑에 else문이 있다면 else문을 작동시킨다.
하지만 elif문은 또다른 조건으로 보는것이 맞다. if문과 그 밑에 elif문이 있다면, if는 조건 1 elif는 또는이라고 해석하는 것이다.
그리고 if문은 조건을 하나만 달 수 있는 것이 아니다. 
if a>10 and b<10:
 print("조건을 만족했습니다!")
일 경우, a>10과 b<10이라는 조건을 모두 만족해야만 밑의 프린트문을 출력한다.
if문의 조건을 설정할 때, 연산자를 활용하여 조건을 더욱 세부적으로 설정이 가능하다.
조건을 설정할 때, or을 통해 조건을 여러개로 설정할 수 있다. elif문을 쓰지않고 조건을 여러개 설정 가능하다.
----------------
반복문이란?
while과 for문이 있다. 
while이란 ~하는동안 반복한다라는 역할을 가진 친구다. 
ex.while(조건):
    True일때 실행할 문장
    다음 실행할 문장
같은 구조로 이루어져 있다.
for문도 비슷한 구조인데
ex.a=10
   for i in a:
    print("{}!".format(a))
for문 안에 있는 a는 범위인데, a의 값이 for문이 몇번 반복되게 할지 결정하게 하는 범위를 지정하는것이다.
a가 10이라면 for문에서 10번을 반복하라는 것.
a는 i안에 1부터 10까지 한번씩 들어가게 되며, 한번씩 순환할 때마다 i의 값은 1씩 올라 a를 통해 지정한 범위인 10까지 반복을 마친다면 이 문은 종료된다.
그리고 범위를 지정해주는 함수도 존재하는데, 바로 range다.
range란 범위를 지정해주는 함수로써, 구조는 range(start,stop,step)이 되시겠다.
그리고 stop값이 -1까지만 범위로 인식한다. range(1,10)이라면, 1부터 9까지 범위를 지정한다는 뜻. 
for i in range(1,10)
이라면, 1부터 9까지 반복한다는 뜻이다.
