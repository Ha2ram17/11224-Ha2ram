list
리스트의 정의부터 살펴보자면
리스트란, 자료를 하나의 변수에 저장하는 컬렉션 자료형이다.
만약  내가 김, 이불, 김밥이라는 자료를 하나의 변수 안에 저장할 때 사용된다.
(ex. list1 = ["김","이불","김밥"])
위와 같은 리스트를 생성했다면, list1이라는 변수 안에는 김,이불,김밥이 각각 저장되는 것이다.
print(list1)
(결괏값)['김', '이불', '김밥']으로 리스트 안에 저장된 다양한 값이 나오는 것을 알 수 있다. 
리스트안에 저장된 자료들은 모두 순서가 있는데, 이 순서는 0부터 시작한다.
이 말뜻은, 김이 0번째, 이불이 1번째, 김밥은 2번째라는 말이다.
0 1 2 3순으로 진행이된다고 알아두면 되겠다.
리스트와 관련한 함수들을 소개해보려 하는데,
len() - 리스트 속 요소의 개수를 반환하는 함수라고 알아두면 되겠다.
sum() - 리스트 속 요소가 정수 혹은 실수일 경우, 요소들을 전부 더한 값으로 반환한다. *안에 문자형이 존재할 경우, 오류가 일어난다.
리스트명.append() - 리스트에 ()안에 있는 값이 추가된다. 단, 순서는 맨 마지막에 추가된다.
리스트명.insert(위치,요소) - 리스트안에 특정 위치에 요소를 추가한다. *리스트의 순서 특징을 잘 기억하고 사용할 것, 이 함수를 이용해 요소를 추가한 경우, 원래 있던 요소들은 뒤로 밀려난다.
리스트명.extend() - 원래 있던 리스트 뒤쪽에 ()안에 있는 값이 추가된다. 그러나 다른점은 append()는 하나의 요소만 리스트에 추가한 반면, extend()는 여러개를 추가 가능하다는 것.
리스트명.split() - (ex.plz = "김밥천국/설빙/마구마구분식"이라는 변수가 있을 때, plz_list = plz.split('/')이라는 명령이 들어오면, plz_list에는 김밥천국,설빙,마구마구분식이 들어있는 리스트가 생성된다. plz_list에는 ['김밥천국','설빙','마구마구분식']이라는 리스트가 생성된 것이다. 왜? plz에서 /를 기점으로 plz_list에다가 리스트를 만들라고 지시했기 때문이다.
*리스트에서 안에 있는 요소를 교체할 수도 있다.
one1 = ['Let','go','!!']
one1[:3] = 'ㅋ','ㅋ','ㅋ'
print(one1)
결괏값 ['ㅋ', 'ㅋ', 'ㅋ']
슬라이싱을 이용하여 간편하게 교체할 수 있다.
여기서 슬라이싱이란?
리스트 안에 있는 요소가 많을 경우, 원하는 범위만 지정할 수 있게하는 방법이다.
one1 = ['Let','go','!!']
print(one1[:2])
할 경우, 결괏값에는 Let와 go만이 나타나고 !!는 나타나지 않는다. 슬라이싱으로 Let와 go만 지정해줬기 때문이다.
print(one1[0::2])
할 경우, 결괏값에는 Let와 !!이 나타날 것이다. 0번째를 포함하고 1개를 건너뛰라고 슬라이싱으로 지정해줬기 때문이다. 
